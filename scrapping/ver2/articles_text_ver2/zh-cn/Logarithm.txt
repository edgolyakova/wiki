对数
目录
定义[编辑]
历史[编辑]
对数函数[编辑]
运算公式[编辑]
有理和无理指数[编辑]
特殊底数[编辑]
底数变换[编辑]
对数的用途[编辑]
群论[编辑]
复对数[编辑]
微积分[编辑]
计算自然对数的级数[编辑]
计算机[编辑]
一般化[编辑]
对数表[编辑]
注释[编辑]
参考文献[编辑]
外部链接[编辑]
参见[编辑]
导航菜单
对数[编辑]
符号[编辑]
简便计算[编辑]
个人工具
命名空间
查看
搜索
导航
帮助
工具
打印/导出
在其他项目中
其他语言
在数学中，对数（英语：Logarithm）是幂运算的逆运算。
当



x
=

β

y




{\displaystyle x=\beta ^{y}}

时，则有
其中



β


{\displaystyle \beta }

是对数的底（也称为基数），而 



y


{\displaystyle y}

就是



x


{\displaystyle x}

（对于底数



β


{\displaystyle \beta }

）的对数，



x


{\displaystyle x}

也称为真数。
底数



β


{\displaystyle \beta }

的值在实数范围内常取



e


{\displaystyle e}

、 10、2等，但一定不能是1或0[注 2]
当



x


{\displaystyle x}

和



β


{\displaystyle \beta }

进一步限制为正实数的时候，对数是唯一的实数。
例如，因为
我们可以得出
用日常语言说，即「81以3为底的对数是4」。 这个意思就是说，3的4次方是81。
15世纪时，法国数学家丘凯（法语：Nicolas Chuquet）和德国数学家施蒂费尔（德语：Michael Stifel）在开展研究工作时产生了发展对数的思想，他们，尤其是后者，对等差数列和等比数列的关系作了一些研究。但他们并没有使其得到更进一步的发展。[1]
一般认为对数于16世纪末至17世纪初期间由苏格兰数学家约翰·纳皮尔男爵和瑞士工程师约斯特·比尔吉发明。比尔吉曾担任过着名天文学家开普勒的助手，因此会经常接触到复杂的天文计算，他也因此产生了化简数值计算的想法。[注 3]纳皮尔是一位苏格兰贵族，对数值的计算有很深的研究。为了找到简化球面三角计算的方法，他也产生了发展对数的想法。1614年，他在自己的书籍《奇妙的对数表的描述》[2]上发布了自己的对数表，相较比尔吉早了6年。纳皮尔发明的纳皮尔算筹用加减法代替了乘除法，成功简化了乘除法的运算，他的对数被后人称为纳皮尔对数，记法为Nap·logx。[1]
1624年，英国数学家亨利·布里格斯（英语：Henry Briggs (mathematician)）书籍《对数算术》成功出版，书中写有14位常用对数表。布里格斯率先采用了以10为底的常用对数，而现在它已通用。他还制作了正弦和正切的对数表。荷兰数学家兼出版商在布里格斯的基础上加以改进，他出版的数个对数表在欧洲迅速普及起来。[1]
17世纪中叶（清朝初年），中国数学家薛凤祚和波兰传教士穆尼阁合作完成了中国最早的对数着作《比例对数表》（又名《历学会通》），对数自此传入中国。[1][3]此书称真数为“原数”，对数为“比例数”。而《数理精蕴》中则称作对数比例：“对数比例乃西士若往·纳白尔所作，以借数与真数对列成表，故名对数表。”中国因此普遍称之为“对数”。
对数对科学的进步有所贡献，特别是对天文学，使某些繁难的乘法计算转换为加法计算。在计算器和计算机发明之前，对数长期用于测量、航海、和其他应用数学分支中。
对数符号



log


{\displaystyle \log }

出自拉丁文logarithmus，最早由1632年意大利数学家卡瓦列里所使用。纳皮尔在表示对数时套用logarithm整个词，并未作简化。1624年，开普勒才把对数符号简化为



l
o
g


{\displaystyle log}

，奥特雷得在1647年也用简化了的Log。
1893年，皮亚诺用



l
n


{\displaystyle ln}

x及



l
g


{\displaystyle lg}

x分别表示以



e


{\displaystyle e}

为底的对数和以10为底的对数。1902年，施托尔茨等人以



a
log
.
b


{\displaystyle a\log .b}

表示以



a


{\displaystyle a}

为底的



b


{\displaystyle b}

的对数。
20世纪初，形成了对数的现代标准表示




log

α


⁡

N



{\displaystyle \log _{\alpha }\mathrm {N} }

，为了使用方便，自然对数



ln
⁡
N


{\displaystyle \ln N}

的记法得到了普遍认可。
函数




log

α


⁡
x


{\displaystyle \log _{\alpha }x}

依赖于



α


{\displaystyle \alpha }

和



x


{\displaystyle x}

二者，但是术语对数函数在标准用法中用来称呼形如




log

α


⁡
x


{\displaystyle \log _{\alpha }x}

的函数，在其中底数



α


{\displaystyle \alpha }

是固定的而只有一个参数



α


{\displaystyle \alpha }

。[注 4]
对数函数图像和指数函数图像关于直线



y
=
x


{\displaystyle y=x}

对称，互为逆函数。
对数函数的性质有：
log

α


⁡
 
M

N



=

log

α


⁡
 

β

m




β

n








=

log

α


⁡
 

β

m
+
n








=
(
m
+
n
)

log

α



β






=
m

log

α



β
+
n

log

α



β






=

log

α


⁡
 

β

m


+

log

α


⁡
 

β

n








=

log

α



M
+

log

α



N





log

α





M
N





=

log

α



M
+

log

α





1
N








=

log

α



M
−

log

α



N






{\displaystyle {\begin{aligned}\log _{\alpha }\ M\!N&=\log _{\alpha }\ \beta ^{m}\!\beta ^{n}\\&=\log _{\alpha }\ \beta ^{m+n}\\&=(m+n)\log _{\alpha }\!\beta \\&=m\log _{\alpha }\!\beta +n\log _{\alpha }\!\beta \\&=\log _{\alpha }\ \beta ^{m}+\log _{\alpha }\ \beta ^{n}\\&=\log _{\alpha }\!M+\log _{\alpha }\!N\\\log _{\alpha }\!{\frac {M}{N}}&=\log _{\alpha }\!M+\log _{\alpha }\!{\frac {1}{N}}\\&=\log _{\alpha }\!M-\log _{\alpha }\!N\end{aligned}}}
如果



n


{\displaystyle n}

是自然数，





β


n




{\displaystyle {\beta }^{n}}

表示等于



β


{\displaystyle \beta }

的



n


{\displaystyle n}

个因子的乘积：
但是，如果



β


{\displaystyle \beta }

是不等于1的正实数，这个定义可以扩展到在一个域中的任何实数



n


{\displaystyle n}

（参见幂）。类似的，对数函数可以定义于任何正实数。对于不等于1的每个正底数



β


{\displaystyle \beta }

，有一个对数函数和一个指数函数，它们互为反函数。
对数可以简化乘法运算为加法，除法为减法，幂运算为乘法，根运算为除法。所以，在发明电子计算机之前，对数对进行冗长的数值运算是很有用的，它们广泛的用于天文、工程、航海和测绘等领域中。它们有重要的数学性质而在今天仍在广泛使用中。
最常用做底数的是e、10和2。
在数学分析中，以



e


{\displaystyle e}

为底对数很常见。另一方面，以10为底对数在十进制表示法中，手工计算很容易：[4]
所以




log

10


⁡
x


{\displaystyle \log _{10}x}

表示正整数



x


{\displaystyle x}

的位数：数字的十进制位数是严格大于




log

10


⁡
x


{\displaystyle \log _{10}x}

的最小的整数。例如




log

10


⁡
1430
≈
3.15


{\displaystyle \log _{10}1430\approx 3.15}

，下一个整数是4，即1430的位数。
以2为底的对数常用于计算机科学，因为计算机中二进制很普及。当然上面的算法也可推广到二进制：严格大于




log

2


⁡
x


{\displaystyle \log _{2}x}

的最小整数是



x


{\displaystyle x}

在二进制下的位数。事实上经由简单推导即可得知，floor(logpx)+1 得到



x


{\displaystyle x}

在



p


{\displaystyle p}

进制下的位数：若



x


{\displaystyle x}

在



p


{\displaystyle p}

进制下有



n


{\displaystyle n}

位，则




p

n
−
1


≤
x
<

p

n




{\displaystyle p^{n-1}\leq x<p^{n}}

；而



p


{\displaystyle p}

是不小于 2 的正整数导致以其为底的




log

p


⁡
x


{\displaystyle \log _{p}x}

是增函数，故三边取对数得



n
−
1
≤

log

p


⁡
x
<
n


{\displaystyle n-1\leq \log _{p}x<n}

，取下整正好得到



n
−
1


{\displaystyle n-1}

。
下表列出了这些底数的常用的对数符号以及他们所使用的领域。许多学科都写



log
⁡
(
x
)


{\displaystyle \log(x)}

来代替




log

b


⁡
(
x
)


{\displaystyle \log _{b}(x)}

，而



b


{\displaystyle b}

的值根据前后文可以确定。记号






b


log
⁡
(
x
)


{\displaystyle ^{b}\log(x)}

也出现过。[5]“ISO表示法”（ISO 31-11（英语：ISO 31-11））一列指定了ISO推荐的表示方法。[6]
尽管有很多有用的恒等式，对计算器最重要的是找到不是建造于计算器内的底数(通常是




log

e




{\displaystyle \log _{e}}

和




log

10




{\displaystyle \log _{10}}

)的其他底数的对数。要使用其他底数



β


{\displaystyle \beta }

找到底数



α


{\displaystyle \alpha }

的对数:
此外，这个结果蕴涵了所有对数函数（任意底数）都是相互类似的。所以用计算器计算对134217728底数2的对数:
对数对解幂是未知的方程是有用的。它们有简单的导数，所以它们经常用在解积分中。对数是三个相关的函数中的一个。在等式




b

n


=
x


{\displaystyle b^{n}=x}

中，



b


{\displaystyle b}

可以从



x


{\displaystyle x}

的



n


{\displaystyle n}

次方根，



n


{\displaystyle n}

从



x


{\displaystyle x}

的



b


{\displaystyle b}

底数的对数，



x


{\displaystyle x}

从



b


{\displaystyle b}

的



n


{\displaystyle n}

次的幂来确定。参见对数恒等式得到掌控对数函数的一些规则。
对数把注意力从平常的数转移到了幂。只要使用相同的底数，就会使特定运算更容易：
这些关系使在两个数上的这种运算更快，在加法计算器出现之前正确的使用对数是基本技能。[来源请求]
从纯数学的观点来看，恒等式：





log

α


⁡

M


N

=

log

α


⁡

M

+

log

α


⁡

N




{\displaystyle \log _{\alpha }\mathrm {M} \mathrm {N} =\log _{\alpha }\mathrm {M} +\log _{\alpha }\mathrm {N} \!}

，
在两种意义上是基本的。首先，其他3个算术性质可以从它得出。进一步的，它表达了在正实数的乘法群和所有实数的加法群之间的同构。
对数函数是从正实数的乘法群到实数的加法群的唯一连续同构。
复对数计算公式：
自然对数函数的导数是
通过应用换底规则，其他底数的导数是
自然对数



ln
⁡
x



{\displaystyle \ln x\,}

的不定积分是
而其他底数对数的不定积分是
有一些级数用来计算自然对数。[11]最简单和低效的是:
下做推导：
由
在两边积分得到
设



z
=
1
−
x



{\displaystyle z=1-x\!}

并因此



x
=
−
(
z
−
1
)



{\displaystyle x=-(z-1)\!}

，得到
更有效率的级数是基于反双曲函数的
对带有正实部的



z


{\displaystyle z}

。
推导：代换



−
x


{\displaystyle -x}

为



x


{\displaystyle x}

，得到
做减法，得到
设



z
=



1
+
x


1
−
x






{\displaystyle z={\frac {1+x}{1-x}}\!}

并因此



x
=



z
−
1


z
+
1






{\displaystyle x={\frac {z-1}{z+1}}\!}

，得到
例如，应用这个级数于
得到
并因此
在这里我们在第一行的总和中提出了因数





1
10




{\displaystyle {\frac {1}{10}}}

。
对于任何其他底数



β


{\displaystyle \beta }

，我们使用
多数计算机语言把



log
⁡
(
x
)


{\displaystyle \log(x)}

用做自然对数，而常用对数典型的指示为log10(x)。参数和返回值典型的是浮点数据类型。
因为参数是浮点数，可以有用的做如下考虑：
浮点数值



x


{\displaystyle x}

被表示为尾数



m


{\displaystyle m}

和指数



n


{\displaystyle n}

所形成的
因此
所以，替代计算



ln
⁡
(
x
)


{\displaystyle \ln(x)}

，我们计算对某个



m


{\displaystyle m}

的



ln
⁡
(
m
)


{\displaystyle \ln(m)}

使得



1
≤
m
≤
2


{\displaystyle 1\leq m\leq 2}

。有在这个范围内的



m


{\displaystyle m}

意味着值



u
=



m
−
1


m
+
1





{\displaystyle u={\frac {m-1}{m+1}}}

总是在范围



0
≤
u
<


1
3




{\displaystyle 0\leq u<{\frac {1}{3}}}

内。某些机器使用在范围



0.5
≤
m
<
1


{\displaystyle 0.5\leq m<1}

内的尾数，并且在这个情况下



u


{\displaystyle u}

的值将在范围



−


1
3


<
u
≤
0


{\displaystyle -{\frac {1}{3}}<u\leq 0}

内。在任何一种情况下，这个级数都是更容易计算的。
普通的正实数的对数一般化为负数和复数参数，尽管它是多值函数，需要终止在分支点0上的分支切割，来制作一个普通函数或主分支。复数



z


{\displaystyle z}

的（底数



e


{\displaystyle e}

）的对数是复数



ln
⁡
(

|
z
|

)
+
i
arg
⁡
(
z
)


{\displaystyle \ln(\left\vert z\right\vert )+i\arg(z)}

，这里的




|
z
|



{\displaystyle \left\vert z\right\vert }

是



z


{\displaystyle z}

的模，



arg
⁡
(
z
)


{\displaystyle \arg(z)}

是辐角，而



i


{\displaystyle i}

是虚单位；详情参见复对数。
离散对数是在有限群理论中的相关概念。它涉及到解方程




b

n


=
x


{\displaystyle b^{n}=x}

，这里的



b


{\displaystyle b}

和



x


{\displaystyle x}

是这个群的元素，而



n


{\displaystyle n}

是指定在群运算上的幂。对于某些有限群，据信离散对数是非常难计算的，而离散指数非常容易。这种不对称性可用于公开密钥加密。
矩阵对数是矩阵指数的反函数。
对于不等于1的每个正数



b


{\displaystyle b}

，函数




log

b


⁡
(
x
)


{\displaystyle \log _{b}(x)}

是从在乘法下的正实数的群到在加法下（所有）实数的群的同构。它们是唯一的连续的这种同构。对数函数可以扩展为在乘法下正实数的拓扑空间的哈尔测度。
在发明计算器之前，使用对数意味着查对数表，它必须手工建立。
