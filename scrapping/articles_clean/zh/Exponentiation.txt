冪 - 维基百科，自由的百科全书
维基百科，自由的百科全书
跳到导航
跳到搜索
提示：此条目的主题不是楊冪。
此条目的主題是代数概念。
關於几何定理，請見「圆幂定理」。
此條目需要补充更多来源。
 (2014年2月28日)请协助補充多方面可靠来源以改善这篇条目，无法查证的内容可能會因為异议提出而移除。
致使用者：请搜索一下条目的标题（来源搜索："冪" — 网页、新闻、书籍、学术、图像），以检查网络上是否存在该主题的更多可靠来源（判定指引）。
幂運算（英語：exponentiation），又稱指數運算，是數學運算，表達式為 
讀作“
的 
次方”或「
的 
次幂」。
其中，
稱為底數，而 
稱為指數，通常指數寫成上標，放在底數的右邊。
當不能用上標時，例如在編程語言或電子郵件中，
通常寫成 bn 或 b**n；也可視為超運算，記為 bn；亦可以用高德納箭號表示法，寫成 bn。
若n為正整數，可以把 
看作乘方的结果，等同於 
自乘 
次。
=
×
⋯
×
⏟
當指數為 1 時，通常不寫出來，因為運算出的值和底數的數值一樣；指數為 2 時，可以讀作“
的平方”；指數為 3 時，可以讀作“
的立方”。
起始值 1（乘法的單位元）乘上底數（
）自乘指數（
）這麼多次。
這樣定義了後，很易想到如何一般化指數 0 和負數的情況：除 0 外所有數的零次方都是 1 ；指數是負數時就等於重複除以底數（或底數的倒數自乘指數這麼多次），即：
=
−
=
×
⋯
×
⏟
=
=
≠
以分數為指數的冪定義為 
=
即 
次方再开 
次方根
0的0次方目前沒有數學家給予正式的定義。
在部分數學領域中，如組合數學，常用的慣例是定義為 1 ，也有人主張定義為 1 。
因為在十进制，十的次方很易計算，只需在後面加零即可，所以科学记数法借此簡化記錄的數字；二的幂在計算機科學相當重要。
當n是複數及b是正實數時,
=
exp
⁡
ln
⁡
exp 是指數函數而 ln 是自然對數。
目录
重要的恆等式
运算法则
其他等式
运算律
整数指数幂
正整数指数幂
指数是1或者0
零的零次方
负数指数
特殊数的幂
10的幂
2的幂
1的幂
0的幂
负1的幂
指数非常大时的幂
正实数的实数幂
N次方根
有理数幂
e的幂
实数指数幂
负实数的实数幂
正实数的复数幂
e的虚数次幂
三角函数
e的复数指数幂
正实数的复数幂
复数的复数幂
複數的虚数幂
复数的复数幂
一般情况
在函數中
在抽象代數中
计算自然数（正整数）'"`UNIQ--postMath-000000F6-QINU`"'的'"`UNIQ--postMath-000000F7-QINU`"'的算法
註釋
另見
外部連結
重要的恆等式
运算法则
同底数幂相乘，底数不变，指数相加：
×
=
+
同底数幂相除，底数不变，指数相减：
÷
=
−
同指数幂相除，指数不变，底数相除：
=
其他等式
=
−
=
≠
=
≠
=
−
=
≠
运算律
加法和乘法存在交换律，比如：
+
=
=
+
×
=
=
×
但是幂的运算不存在交换律，
=
但是
=
同样，加法和乘法存在结合律，比如：
+
+
=
=
+
+
×
×
=
24
=
×
×
。
不過，冪運算沒有結合律：
=
=
4096
=
81
=
,
417
,
851
,
639
,
229
,
258
,
349
,
412
,
352
所以
≠
但是冪運算仍然有其運算律，稱為指數律：
⋅
=
+
=
−
=
=
⋅
=
⋅
=
整数指数幂
整数指数幂的运算只需要初等代数的知识。
正整数指数幂
表达式
=
⋅
被称作
的平方，因为边长为
的正方形面积是
表达式
=
⋅
⋅
被称作
的立方，因为邊长为
的正方体体积是
所以
读作「3的平方」，
读作「2的立方」。
指数表示的是底数反复相乘多少次。
比如
=
×
×
×
×
=
243
指数是5，底数是3，表示3反复相乘5次。
或者，整数指数幂可以递归地定义成：
=
{
=
⋅
−
>
−
<
指数是1或者0
注意
表示仅仅1个3的乘积，就等于3。
注意
=
×
=
×
=
×
=
×
继续，得到
=
×
=
所以
=
另一个得到此结论的方法是：通过运算法则
=
−
=
时，
=
=
−
=
任何数的1次方是它本身。
零的零次方
主条目：零的零次方
其实还并未被数学家完整的定义，但部分看法是
=
在程式语言中（python） 
∗
∗
=
在这里给出这一种极限的看法
lim
+
=
于是，可以求出 x 取值从 1 到 0.0000001 计算得到的值，如图
负数指数
我们定义任何不为 0 的数 a 的 -1 次方等于它的倒数。
−
=
对于非零
定义
−
=
,
=
时分母為 0 没有意义。
证法一：
根据定义
⋅
=
+
=
−
−
=
−
+
=
=
,
−
=
, 所以
−
=
证法二：
通过运算法则
=
−
=
时，可得
−
=
−
=
=
负数指数
−
还可以表示成1连续除以
。
比如：
−
=
=
81
=
特殊数的幂
10的幂
主条目：科学计数法
在十进制的计数系统中，10的幂写成1后面跟着很多个0。
例如：
10
=
1000
,
10
−
=
0.001
因此10的幂用来表示非常大或者非常小的数字。
如：299,792,458（真空中光速，单位是米每秒），可以写成 
2.99792458
×
10
近似值 
2.998
×
10
或 
×
10
国际单位制词头也使用10的幂来描述特别大或者特别小的数字，比如：词头“千”就是 
10
词头“毫”就是 
10
−
2的幂
主条目：2的幂
1的幂
1的任何次幂都为1
0的幂
0的正数幂都等于0。
0的负数幂没有定义。
任何非0之数的0次方都是1；而0的0次方是懸而未決的，某些領域下常用的慣例是約定為1。
但某些教科書表示0的0次方為無意義。
也有人主張定義為1。
负1的幂
-1的奇数幂等于-1
-1的偶数幂等于1
指数非常大时的幂
一个大于1的数的幂趋于无穷大，一个小于-1的数的幂趋于负无穷大
>
∞
∞
<
−
∞
−
∞
或 
∞
, (視乎n 是奇數或偶數)
一个绝对值小于1的数的幂趋于0
|
|
<
∞
1的幂永远都是1
=
∞
如果数a趋于1而它的幂趋于无穷，那么极限并不一定是上面几个。
一个很重要的例子是：
∞
,
+
参见e的幂
其他指数的极限参见幂的极限
正实数的实数幂
一个正实数的实数幂可以通过两种方法实现。
有理数幂可以通过N次方根定义，任何非0实数次幂都可以这样定义
自然对数可以被用来通过指数函数定义实数幂
N次方根
从上到下：
,
,
,
,
,
,
主条目：方根
一个数
次方根是
=
如果
是一个正实数，
是正整数，那么方程
=
只有一个正实数根。
这个根被称为
次方根，记作：
其中
叫做根号。
或者，
次方根也可以写成
例如
=
,
=
当指数是
时根号上的2可以省略，如：
=
=
=
有理数幂
有理数指数幂定义为
=
=
e的幂
主条目：指数函数
这个重要的数学常数e，有时叫做欧拉数，近似2.718，是自然对数的底。
它提供了定义非整数指数幂的一个方法。
它是从以下极限定义的：
=
lim
∞
+
指数函数的定义是： 
=
lim
∞
+
可以很简单地证明e的正整数k次方
是：
=
[
lim
∞
+
]
=
lim
∞
[
+
]
=
lim
∞
+
⋅
⋅
=
lim
⋅
∞
+
⋅
⋅
=
lim
∞
+
实数指数幂
y = bx對各種底數b的圖像，分別為綠色的10、紅色的e、藍色的2和青色的1/2。
因为所有实数可以近似地表示为有理数，任意实数指数x可以定义成：
=
lim
,
例如：
≈
1.732
于是
≈
1.732
=
433
250
=
433
250
≈
16.241
实数指数幂通常使用对数来定义，而不是近似有理数。
自然对数
ln
⁡
是指数函数
的反函数。
它的定义是：对于任意
>
满足
=
ln
⁡
根据对数和指数运算的规则：
=
ln
⁡
=
⋅
ln
⁡
这就是实数指数幂的定义：
=
⋅
ln
⁡
实数指数幂
的这个定义和上面使用有理数指数和连续性的定义相吻合。
对于复数，这种定义更加常用。
负实数的实数幂
如果
是负数且
是偶数，那么
=
是正數。
如果
是负数且
是奇数，那么
=
是负数。
使用对数和有理数指数都不能将
（其中
是负实数，
实数）定义成实数。
在一些特殊情况下，给出一个定义是可行的：负指数的整数指数幂是实数，有理数指数幂对于
（
是奇数）可以使用
次方根来计算，但是因为没有实数
=
−
对于
（
是偶数）时必须使用虚数单位
使用对数的方法不能定义
≤
时的
为实数。
实际上，
对于任何实数
都是正的，所以
ln
⁡
对于负数没有意义。
使用有理数指数幂来逼近的方法也不能用于负数
因为它依赖于连续性。
函数
=
对于任何正的有理数
是连续的，但是对于负数
函数
在有些有理数
上甚至不是连续的。
 
例如：当
=
−
它的奇数次根等于-1。
所以如果
是正奇数整数，
−
=
−
是奇数，
−
=
是偶数。
虽然有理数
−
=
的集合是稠密集，但是有理数
−
=
−
的集合也是。
所以函数
−
在有理数域不是连续的。
因此，如果要求负实数的任意实数幂，必须将底数和指数看成複數，按复数的正实数幂或复数的复数幂方法计算。
正实数的复数幂
e的虚数次幂
主条目：指数函数
指数函数ez可以通过(1 + z/N)N当N趋于无穷大时的极限来定义，那么eiπ就是(1 + iπ/N)N的极限。
在这个动画中n从1取到100。
(1 + iπ/N)N的值通过N重复增加在复数平面上展示，最终结果就是(1 + iπ/N)N的准确值。
可以看出，随着N的增大，(1 + iπ/N)N逐渐逼近极限-1。
这就是欧拉公式。
複數运算的几何意义和e的幂可以帮助我们理解
（
是实数），即純虛數指數函數。
想象一个直角三角形
,
,
+
（括号内是复数平面内三角形的三个顶点），对于足够大的
这个三角形可以看作一个扇形，这个扇形的中心角就等于
弧度。
对于所有
三角形
,
+
,
+
+
互为相似三角形。
所以当
足够大时
+
的极限是复数平面上的单位圆上
弧度的点。
这个点的极坐标是
,
=
,
直角坐标是
cos
⁡
,
sin
⁡
。
所以
=
cos
⁡
+
sin
⁡
而這個函數可以稱為純虛數指數函數。
这就是欧拉公式，它通过複數的意义将代数学和三角学联系起来了。
等式
=
的解是一个整数乘以
：
{
=
}
=
{
∈
}
更一般地，如果
=
那么
=
的每一个解都可以通过将
的整数倍加上
得到：
{
=
}
=
{
+
∈
}
这个复指数函数是一个有周期
的周期函数。
更简单的：
=
−
;
+
=
cos
⁡
+
sin
⁡
三角函数
主条目：欧拉公式
根据欧拉公式，三角函数余弦和正弦是： 
cos
⁡
=
⋅
+
−
⋅
sin
⁡
=
⋅
−
−
⋅
⋅
历史上，在复数发明之前，余弦和正弦是用几何的方法定义的。
上面的公式将复杂的三角函数的求和公式转换成了简单的指数方程 
⋅
+
=
⋅
⋅
⋅
使用了复数指数幂之后，很多三角学问题都能够使用代数方法解决。
e的复数指数幂
+
可以分解成
⋅
。
其中
+
的模，
决定了
+
的方向
正实数的复数幂
如果
是一个正实数，
是任何复数，
定义成
⋅
ln
⁡
其中
=
ln
⁡
是方程
=
的唯一解。
所以处理实数的方法同样可以用来处理复数。
例如：
=
⋅
ln
⁡
=
cos
⁡
ln
⁡
+
⋅
sin
⁡
ln
⁡
=
0.7692
+
0.63896
=
0.5403023
+
0.841471
10
=
−
0.6682015
+
0.7439803
=
535.49
=
复数的复数幂
複數的虚数幂
让我们从一个简单的例子开始：计算
+
+
=
[
+
]
=
=
−
=
−
cos
⁡
ln
⁡
+
−
sin
⁡
ln
⁡
其中
的得法参见上文正实数的复数幂
复数的复数幂
类似地，在计算复数的复数幂时，我们可以将指数的实部与虚部分开以进行幂计算。
例如计算
+
+
：
+
+
=
+
+
=
−
cos
⁡
ln
⁡
+
sin
⁡
ln
⁡
=
−
−
sin
⁡
ln
⁡
+
−
cos
⁡
ln
⁡
一般情况
复数的复数幂必须首先化为底数为
的形式：
=
ln
⁡
又，由复数的极坐标表示法：
=
=
ln
⁡
=
ln
⁡
+
然后，使用欧拉公式处理即可。
由于复数的极坐标表示法中，辐角
的取值是具有周期性的，因此复数的复数幂在大多数情况下是多值函数。
不过实际应用中，为了简便起见，辐角都只取主值，从而使幂值唯一。
在函數中
當函數名後有上標的數（即函數的指數），一般指要重複它的運算。
例如
。
特別地，
−
的反函數。
但三角函数的情況有所不同，一個正指數應用於函數的名字時，指答案要進行乘方運算，而指數為-1時则表示其反函數。
例如：
sin
⁡
−
表示
csc
⁡
。
因此在三角函數時，使用
sin
−
⁡
來表示
sin
⁡
的反函數
arcsin
⁡
在抽象代數中
计算自然数（正整数）
的算法
最快的方式计算
是正整数的时候。
它利用了测试一个数是奇数在计算机上是非常容易的，和通过简单的移所有位向右来除以2的事实。
偽代碼：
1. 1  y, n  k, a  f
2.若k不為0,執行3至6
3.若k為奇數, y * f  y
4. k [[位操作#移位|右移]]1位（即k / 2  k ,小數點無條件捨去）
5. f * f  f
6.回到2
7.傳回y
在C/C++语言中，你可以写如下算法：
double power(double a, unsigned int n)
{
double y = 1;
double f = a;
while (n > 0) {
if (n % 2 == 1) y *= f;
n >>= 1;
f *= f;
}
return y;
}
此算法的時間複雜度為
log
⁡
比普通算法快（a自乘100次，時間複雜度為
），在
較大的時候更為顯著。
例如計算
100
普通算法需要算100次，上述算法則只需要算7次。
若要計算
<
可先以上述算法計算
|
|
再作倒數。
註釋
Augustin-Louis Cauchy, Cours d'Analyse de l'École Royale Polytechnique (1821).  In his Oeuvres Complètes, series 2, volume 3.
康軒國中1上《FUN學練功坊①》P.35：a的0次方=1(a≠0)(註：0的0次方為無意義)
Denlinger, Charles G. Elements of Real Analysis.
Jones and Bartlett. 2011: 278–283. ISBN 978-0-7637-7947-4. 
This definition of a principal root of unity can be found in:
Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein.
Introduction to Algorithms second.
MIT Press. 2001. ISBN 0-262-03293-7.  Online resource （页面存档备份，存于互联网档案馆）
Paul Cull, Mary Flahive, and Robby Robson.
Difference Equations: From Rabbits to Chaos Undergraduate Texts in Mathematics.
Springer. 2005. ISBN 0-387-23234-6.  Defined on page 351, available on Google books.
"Principal root of unity （页面存档备份，存于互联网档案馆）", MathWorld.
另見
迭代冪次
外部連結
指數的歷史
取自“”
分类：​初等数学二元運算指数隐藏分类：​自2014年2月需补充来源的条目拒绝当选首页新条目推荐栏目的条目含有英語的條目
导航菜单
个人工具
没有登录讨论贡献创建账号登录
命名空间
条目讨论
不转换
不转换简体繁體大陆简体香港繁體澳門繁體大马简体新加坡简体臺灣正體
查看
阅读编辑查看历史
更多
搜索
导航
首页分类索引特色内容新闻动态最近更改随机条目资助维基百科
帮助
帮助维基社群方针与指引互助客栈知识问答字词转换IRC即时聊天联络我们关于维基百科
工具
链入页面相关更改上传文件特殊页面固定链接页面信息引用本页维基数据项目
打印/导出
下载为PDF打印页面
在其他项目中
维基共享资源
其他语言
编辑链接
本页面最后修订于2022年7月2日 (星期六) 06:41。
本站的全部文字在知识共享 署名-相同方式共享 3.0协议之条款下提供，附加条款亦可能应用。
（请参阅使用条款）
Wikipedia®和维基百科标志是维基媒体基金会的注册商标；维基™是维基媒体基金会的商标。
维基媒体基金会是按美国国內稅收法501(c)(3)登记的非营利慈善机构。
隐私政策
关于维基百科
免责声明
手机版视图
开发者
统计
Cookie声明
